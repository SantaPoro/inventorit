version: '3'
services:
  frontend:
    build:
      context: .
      dockerfile: packages/frontend/dev.Dockerfile
    image: inventorit-frontend:latest-dev
    ports:
      - ${FRONTEND_PORT}:3000
      - 1234:1234
    volumes:
      - /usr/src/app/packages/frontend/node_modules
      - ./packages/frontend:/usr/src/app/packages/frontend
      - /usr/src/app/packages/backend/node_modules
      - ./packages/backend:/usr/src/app/packages/backend

  backend:
    build:
      context: .
      dockerfile: packages/backend/dev.Dockerfile
    image: inventorit-backend:latest-dev
    ports:
      - ${BACKEND_PORT}:3000
    volumes:
      - /usr/src/app/packages/backend/node_modules
      - ./packages/backend:/usr/src/app/packages/backend

  postgres:
    image: postgres:12
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USERNAME}
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pgadmindata:/usr/lib/pgadmin

  redis:
    image: redis:6.0

  gamma-frontend:
    image: cthit/gamma-frontend:development
    environment:
      HTTP_PROXY: http://gamma-backend:8081
    depends_on:
      - gamma-backend
    networks:
      - gamma
    ports:
      - ${GAMMA_FRONTEND_PORT}:3000

  gamma-backend:
    image: cthit/gamma-backend
    environment:
      # Default admin user name = admin
      # Default admin password  = password

      DB_USER: user
      DB_PASSWORD: password
      DB_HOST: gamma-db
      DB_PORT: 5432
      DB_NAME: postgres

      REDIS_HOST: gamma-redis
      REDIS_PASSWORD: ''
      REDIS_PORT: 6379

      GOTIFY_KEY: '123abc'
      GOTIFY_URL: http://gamma-gotify:8080/mail

      DEFAULT_CLIENT_NAME: inventorit
      DEFAULT_CLIENT_ID: inventorit
      DEFAULT_CLIENT_SECRET: inventorit
      DEFAULT_REDIRECT_URI: http://localhost:${FRONTEND_PORT}/oauth2/gamma/callback

      SERVER_PORT: 8081
      SUCCESSFUL_LOGIN: http://localhost:${GAMMA_FRONTEND_PORT}
      CORS_ALLOWED_ORIGIN: http://localhost:${GAMMA_FRONTEND_PORT}
      BACKEND_URI: http://localhost:${GAMMA_BACKEND_PORT}
      PRODUCTION: 'false'
      COOKIE_DOMAIN: localhost
      IS_MOCKING_CLIENT: 'true'
    depends_on:
      - gamma-redis
      - gamma-db
    networks:
      - gamma
    ports:
      - ${GAMMA_BACKEND_PORT}:8081

  gamma-redis:
    image: redis:5.0
    networks:
      - gamma

  gamma-db:
    image: postgres:10
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
    networks:
      - gamma

networks:
  gamma:

volumes:
  pgdata:
  pgadmindata:
  redisdata:
